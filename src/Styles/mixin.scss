@import "Styles/variables.scss";

@mixin flexCenter {
    display: flex;
    justify-content: center;
    align-items: center;
}

@mixin absolutePseudo {
    position: absolute;
    display: block;
    content: "";
}

@mixin setProp($prop, $val) {
    &:not(.parent),
    &:after,
    &.parent > *,
    & > *:after {
        #{$prop}: $val;
    }
}

@mixin backgroundColor {
    $backgrounds: 
        "background-grey" $defaultGray, 
        "background-green" $green, 
        "background-orange" $orange, 
        "background-dark-grey" $darkGray, 
        "background-light-grey" $lightGray, 
        "background-no-color" $black;

    @each $class, $color in $backgrounds {
        &.#{$class} {
            @include setProp('background-color', $color);
        }
    }
}

@mixin borderColor {
    $borders: 
        "border-grey" $defaultGray, 
        "border-green" $green, 
        "border-orange" $orange, 
        "border-dark-grey" $darkGray, 
        "border-light-grey" $lightGray, 
        "border-no-color" transparent;

    @each $class, $color in $borders {
        &.#{$class} {
            @include setProp('border', 3px solid $color);
        }
    }
}

@mixin roundedTop {
    &.rounded-top {
        @include setProp('border-top-left-radius', 50%);
        @include setProp('border-top-right-radius', 50%);
    }
}

@mixin roundedBottom {
    &.rounded-bottom {
        @include setProp('border-bottom-left-radius', 50%);
        @include setProp('border-bottom-right-radius', 50%);
    }
}

@mixin borderRadius {
    &.border-radius {
        @include setProp('border-radius', $spacer);
    }
}

@mixin distribute {
    &.horizontal {
        flex-direction: row;
    }
    &.vertical {
        flex-direction: column;
    }
}

@mixin classesForProps {
    @include backgroundColor;
    @include borderColor;
    @include roundedTop;
    @include roundedBottom;
    @include borderRadius;
    @include distribute;
    cursor: pointer;
}

@mixin partAnimation($part) {
    .dance & {
        animation: #{$part} $transition-dance;
        animation-iteration-count: infinite;
    }
}

@keyframes torso {
    0% { transform: translate(0, 0) rotate(0); }
    25% { transform: translate(16px, 0) rotate(-8deg); }
    50% { transform: translate(0, 0) rotate(0); }
    75% { transform: translate(-16px, 0) rotate(8deg); }
}

@keyframes hand {
    0% { transform: translate(0, 0) rotate(0); }
    25% { transform: translate(-106px, -90px) rotate(90deg); }
    50% { transform: translate(0, 0) rotate(0); }
    75% { transform: translate(-30px, -30px) rotate(10deg); }
}

@keyframes leg {
    0% { transform: translate(0, 0) rotate(0); }
    25% { transform: translate(20px, 0) rotate(8deg); }
    50% { transform: translate(0, 0) rotate(0); }
    75% { transform: translate(-20px, 0) rotate(-8deg); }
}

@keyframes robot-head {
    0% { transform: translate(0, 0) rotate(0); }
    25% { transform: translate(20px, 0) rotate(0); }
    50% { transform: translate(0, 0) rotate(0); }
    75% { transform: translate(-20px, 0) rotate(0); }
}

@keyframes neck {
    0% { transform: translate(0, 0) rotate(0); }
    25% { transform: translate(-8px, 0) rotate(0); }
    50% { transform: translate(0, 0) rotate(0); }
    75% { transform: translate(8px, 0) rotate(0); }
}

@keyframes antenna-left {
    0% { transform: translate(0, 0) rotate(-45deg); }
    25% { transform: translate(-10px, 0) rotate(-60deg); }
    50% { transform: translate(0, 0) rotate(-45deg); }
    75% { transform: translate(8px, 0) rotate(-30deg); }
}

@keyframes antenna-right {
    0% { transform: translate(0, 0) rotate(45deg); }
    25% { transform: translate(10px, 0) rotate(60deg); }
    50% { transform: translate(0, 0) rotate(45deg); }
    75% { transform: translate(-8px, 0) rotate(30deg); }
}

@keyframes ear {
    0% { transform: translate(0, 0) rotate(0); }
    25% { transform: translate(0, -15px) rotate(0); }
    50% { transform: translate(0, 0) rotate(0); }
    75% { transform: translate(0, -15px) rotate(0); }
}

@keyframes eye {
    0% { transform: translate(0, 0) scale(1, 1); }
    25% { transform: translate(0, -3px) scale(1, 0.1); }
    50% { transform: translate(0, 0) scale(1, 1); }
    50% { transform: translate(0, 0) scale(1, 1); }
}

@keyframes monitor {
    0% { opacity: 1; transform: scale(1, 1); }
    10% { opacity: 0.2; transform: scale(1, 0.5); }
    20% { opacity: 1; transform: scale(1, 1); }
    40% { opacity: 0.4; transform: scale(1, 0.1); }
    50% { opacity: 0.5; transform: scale(1.5, 0.1); }
    60% { opacity: 0; transform: scale(0.1, 0.1); }
    99% { opacity: 0; transform: scale(0.1, 0.1); }
    100% { opacity: 1; transform: scale(1, 1); }
}

@keyframes button {
    0% { opacity: 1; transform: scale(1, 1); }
    10% { opacity: 1; transform: scale(0.1, 0.1); }
    30% { opacity: 1; transform: scale(1, 1); }
}

