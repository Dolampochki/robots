@import "Styles/variables.scss";

@mixin flexCenter {
    display: flex;
    justify-content: center;
    align-items: center;
}

@mixin absolutePseudo {
    position: absolute;
    left: 0;
    top: 0;
    display: block;
    content: "";
}

@mixin setProp($prop, $val) {
    &:not(.parent),
    &:after,
    &.parent > *,
    & > *:after {
        #{$prop}: $val;
    }
}

@mixin backgroundColor {
    $backgrounds: 
        "background-grey" $layoutBorderColor, 
        "background-green" $themeColor, 
        "background-dark-grey" $tableLightBgColor, 
        "background-light-grey" $baseBorderColor, 
        "background-no-color" $globalBgColor;

    @each $class, $color in $backgrounds {
        &.#{$class} {
            @include setProp('background-color', $color);
        }
    }
}

@mixin borderColor {
    $borders: 
        "border-grey" $layoutBorderColor, 
        "border-green" $themeColor, 
        "border-dark-grey" $tableLightBgColor, 
        "border-light-grey" $baseBorderColor, 
        "border-no-color" transparent;

    @each $class, $color in $borders {
        &.#{$class} {
            @include setProp('border', 3px solid $color);
        }
    }
}

@mixin roundedTop {
    &.rounded-top {
        @include setProp('border-top-left-radius', 50%);
        @include setProp('border-top-right-radius', 50%);
    }
}

@mixin roundedBottom {
    &.rounded-bottom {
        @include setProp('border-bottom-left-radius', 50%);
        @include setProp('border-bottom-right-radius', 50%);
    }
}

@mixin borderRadius {
    &.border-radius {
        @include setProp('border-radius', $spacer);
    }
}

@mixin distribute {
    &.horizontal {
        flex-direction: row;
    }
    &.vertical {
        flex-direction: column;
    }
}

@mixin classesForProps {
    @include backgroundColor;
    @include borderColor;
    @include roundedTop;
    @include roundedBottom;
    @include borderRadius;
    @include distribute;
    cursor: pointer;
}